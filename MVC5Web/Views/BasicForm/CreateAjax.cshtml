@model MVC5Web.Models.Visit

@{
    ViewBag.Title = "Create Visit";
}
<div class="row">
    <div class="col-md-6">
        <!-- general form elements -->
        <div class="box box-primary">
            <div class="box-header with-border">
                <h3 class="box-title">Quick Example</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Ajax.BeginForm("CreateAjax", "BasicForm", null,
                                    ajaxOptions: new AjaxOptions
                                    {
                                        HttpMethod = "Post",
                                        OnSuccess = "FinishedShow",
                                        OnFailure = "FailureShow",
                                        OnBegin = "holdOnOpen()",
                                        OnComplete = "holdOnClose"
                                    },
                                    htmlAttributes: new { id = "BasicForm" }))
            {
                <div class="box-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.PetName)
                        @Html.EditorFor(model => model.PetName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PetName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VisitDate)
                        @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group form-check">
                        @Html.EditorFor(model => model.IsEmergencyVisit, new { htmlAttributes = new { @class = "form-check-input" } })
                        @Html.LabelFor(model => model.IsEmergencyVisit)
                        @Html.ValidationMessageFor(model => model.IsEmergencyVisit, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Notes)
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VeterinarianID)
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="VeterinarianID" id="veterinarian1" value="1" checked>
                            <label class="form-check-label" for="veterinarian1">
                                Daniel Lewis
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="VeterinarianID" id="veterinarian2" value="2">
                            <label class="form-check-label" for="veterinarian2">
                                Gina Reynolds
                            </label>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cost)
                        @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PetWeight)
                        @Html.EditorFor(model => model.PetWeight, new { htmlAttributes = new { @class = "form-control", type = "range", step = ".1" } })
                        @Html.ValidationMessageFor(model => model.PetWeight, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CustomerPhone)
                        @Html.EditorFor(model => model.CustomerPhone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Category)
                        @Html.ListBoxFor(model => model.Category, Model.CategoryList, new { @class = "form-control select2", multiple = "multiple" })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        @*因為 產生table需要一點時間 造成畫面看的出來改成套select2套件的效果 所以先在這裡處理套select2*@
                        <script>$(".select2").select2();</script>
                    </div>

                    <div class="box-footer">
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>

    </div>
</div>

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<script>
    function FinishedShow() {

    }
    function FailureShow(data) {
        var validator = $("#BasicForm").validate();
        var errors = data.responseJSON.ModelStateErrors;
        validator.showErrors(errors);

    } function holdOnOpen() {

    } function holdOnClose() {

    }



</script>