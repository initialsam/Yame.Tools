
@{
    ViewBag.Title = "ChatRoom";
}

<h2>ChatRoom</h2>
<div class="container">
    <input type="hidden" id="displayname"/>
    <span id="name"></span> : 
    <input type="text" id="message" placeholder="message" />
    <input type="button" id="sendmessage" value="Send" />

    <ul id="discussion">
    </ul>
</div>
@section scripts {
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    <script src="~/signalr/hubs"></script>

    <!-- SignalR Init -->
    <script>
        $(function () {
            var groupName = findGetParameter('groupName');
            // Reference the auto-generated proxy for the hub.
            var testHub = $.connection.TestHub;
            // Create a function that the hub can call back to display messages.
            testHub.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            $('#name').text($('#displayname').val())
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                testHub.server.join(groupName);
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    testHub.server.send(groupName,$('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
        function findGetParameter(parameterName) {
            var result = null,
                tmp = [];
            var items = location.search.substr(1).split("&");
            for (var index = 0; index < items.length; index++) {
                tmp = items[index].split("=");
                if (tmp[0] === parameterName) result = decodeURIComponent(tmp[1]);
            }
            return result;
        }
    </script>
}